''''''
'''
Домашнее задание по теме "Генераторы"
Цель: более глубоко понять особенности работы с функциями генераторами и оператором yield в Python.
Задача:
Напишите функцию-генератор all_variants(text), 
которая принимает строку text и возвращает объект-генератор, 
при каждой итерации которого будет возвращаться подпоследовательности переданной строки.

Пункты задачи:
Напишите функцию-генератор all_variants(text).
Вызовите функцию all_variants и выполните итерации.
Пример результата выполнения программы:
Пример работы функции:
a = all_variants("abc")
for i in a:
print(i)
Вывод на консоль:
a
b
c
ab
bc
abc
Файл module_9_6.py и загрузите его на ваш GitHub репозиторий. В решении пришлите ссылку на него.
'''


def all_variants(text):
    '''
    конструктор принимает значение(строку) из функции а для all_variants 'abc'
    :param text: str
    :yield: text: str
    '''
    for i in range(len(text)):
        # 1ext проходим внешним циклом по индексу 0 строки text длиной 3
        # 2ext проходим внешним циклом по индексу 1 строки text длиной 3
        # 3ext проходим внешним циклом по индексу 2 строки text длиной 3
        for j in range(len(text) - i):
            # 1int проходим внутренним циклом по индексам строки 0,1,2 text длиной 3
            # 2int проходим внутренним циклом по индексам строки 0,1 text длиной 2
            # 3int проходим внутренним циклом по индексу строки 0 text длиной 1
            yield text[j:j + i + 1]
            # 1ext,1int нарезка text[0:0+0+1] = text[0:1]=a
            # 1ext,2int нарезка text[1:1+0+1] = text[1:2]=b
            # 1ext,3int нарезка text[2:2+0+1] = text[2:3]=c
            # 2ext,1int нарезка text[0:0+1+1] = text[0:2]=ab
            # 2ext,2int нарезка text[1:1+1+1] = text[1:3]=bc
            # 3ext,1int нарезка text[0:0+2+1] = text[0:3]=abc
            # возвращаем значение text


a = all_variants("abc")
for i in a:
    print(i)
